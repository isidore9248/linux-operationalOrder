1、	getpid()	获取当前进程pid	getppid()	获取父进程pid
	getpgid(pid_t pid)	获取当前进程的组进程pid

2、	fork()	创建子进程 
	创建的子进程从本条语句下面的那条开始执行
	eg.   
		fork();
    		printf("fork is finished\n");
	printf语句会被执行两次，父进程一次&子进程一次
	创建成功：子进程中返回0，父进程中得到子进程的pid
	创建失败：返回-1

3、父子进程变量地址空间：
	A.地址空间：在读变量时，共享一份变量；在写变量时，将共享变量分别拷贝给两个进程，修改者只修改自己的那份变量。
	B.堆空间：在创建进程前，一次malloc需要在子进程和父进程分别free

基本数据类型直接深克隆，引用数据类型的复制是写时拷贝

4、查看内存泄漏工具：
	valgrind <可执行文件>

5、进程退出函数：
	exit()	标准库函数，会刷新所有缓冲的输出流，确保所有输出都被写入到文件或终端。
	_exit()	系统调用函数，立即终止程序，而不会调用任何退出处理函数，也不会刷新标准库中打开的文件流，或者进行其他任何清理工作。

6、等待函数：[wait()和waitpid()]
	wait()
